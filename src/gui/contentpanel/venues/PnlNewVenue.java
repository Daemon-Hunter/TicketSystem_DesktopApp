/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package gui.contentpanel.venues;

import database.DatabaseTable;
import utilities.ImageAssist;
import events.IVenue;
import events.SocialMedia;
import events.Venue;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;
import java.util.ArrayList;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;
import wrappers.DesktopWrapper;

/**
 *
 * @author 10512691
 */
public class PnlNewVenue extends javax.swing.JFrame {

    private IVenue venue;
    private PnlVenues parent;
    private ArrayList<BufferedImage> images;
    /**
     * Creates new form PnlEditArtist
     */
    public PnlNewVenue() {
        initComponents();
        initHelpDialog();
        initPanel();
        
        setDefaultCloseOperation(DISPOSE_ON_CLOSE);
        setResizable(false);
        images = new ArrayList<>();
    }
    
    public void setParent(PnlVenues parent) {
        this.parent = parent;
    }
    
    private void initPanel() {
        txtFacebook.setText("https://");
        txtTwitter.setText("https://");
        txtSoundcloud.setText("https://");
        txtSpotify.setText("https://");
        txtInstagram.setText("https://");
        txtWebsite.setText("https://");
        
        try {
            images = ImageAssist.createDefaults();
            lblImage.setIcon(new ImageIcon(images.get(1)));
        } catch (IOException ex) {
            JOptionPane.showMessageDialog(this, "Error loading default images.");
        }
    }
    
    private void initHelpDialog() {
        helpImage.setToolTipText("Adding an image deletes the last. Default image given if not supplied.");
        lblAddImage.setToolTipText("add");
        lblRemoveImage.setToolTipText("remove");
        helpName.setToolTipText("Enter the venue name.");
        helpDescription.setToolTipText("Maximum 500 character description.");
        helpFacilities.setToolTipText("Let a user know what facilities are available at the venue.");
        helpAccess.setToolTipText("Does the venue have a Disabilities Access Certificate?");
        helpAddress.setToolTipText("Enter the first lines of the address.");
        helpCity.setToolTipText("Enter the venue's city.");
        helpContactDetails.setToolTipText("Enter a phone number & email address for the venue.");
        helpCapacity.setToolTipText("Enter the largest capacity the venue can hold.");
        helpLinks.setToolTipText("Enter official social media links. Must start with 'https://'.");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnlBackground = new javax.swing.JPanel();
        lblName = new javax.swing.JLabel();
        lblDescription = new javax.swing.JLabel();
        lblFacilities = new javax.swing.JLabel();
        txtName = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtDescription = new javax.swing.JTextArea();
        lblDescriptionRemaining = new javax.swing.JLabel();
        jSeparator = new javax.swing.JSeparator();
        pnlImage = new javax.swing.JPanel();
        lblImage = new javax.swing.JLabel();
        txtFacebook = new javax.swing.JTextField();
        txtTwitter = new javax.swing.JTextField();
        txtInstagram = new javax.swing.JTextField();
        txtSoundcloud = new javax.swing.JTextField();
        txtSpotify = new javax.swing.JTextField();
        txtWebsite = new javax.swing.JTextField();
        lblFacebook = new javax.swing.JLabel();
        lblTwitter = new javax.swing.JLabel();
        lblInstagram = new javax.swing.JLabel();
        lblSoundcloud = new javax.swing.JLabel();
        lblSpotify = new javax.swing.JLabel();
        lblWebsite = new javax.swing.JLabel();
        lblDetailsTitle = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtFacilities = new javax.swing.JTextArea();
        btnCancel = new javax.swing.JButton();
        btnSave = new javax.swing.JButton();
        lblAddImage = new javax.swing.JLabel();
        lblRemoveImage = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        helpName = new javax.swing.JLabel();
        helpDescription = new javax.swing.JLabel();
        helpFacilities = new javax.swing.JLabel();
        helpImage = new javax.swing.JLabel();
        helpLinks = new javax.swing.JLabel();
        lblFacilitiesRemaining = new javax.swing.JLabel();
        lblCapacitySeating = new javax.swing.JLabel();
        lblCapacityStanding = new javax.swing.JLabel();
        txtCapacitySeating = new javax.swing.JTextField();
        txtCapacityStanding = new javax.swing.JTextField();
        lblCapacity = new javax.swing.JLabel();
        lblParking = new javax.swing.JLabel();
        txtParking = new javax.swing.JTextField();
        checkBoxAccess = new javax.swing.JCheckBox();
        lblSocialAccount = new javax.swing.JLabel();
        lblAddressTitle = new javax.swing.JLabel();
        lblFacilities1 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        txtAddress = new javax.swing.JTextArea();
        lblCity = new javax.swing.JLabel();
        txtCity = new javax.swing.JTextField();
        lblPostcode = new javax.swing.JLabel();
        txtPostcode = new javax.swing.JTextField();
        lblContactDetails = new javax.swing.JLabel();
        txtEmail = new javax.swing.JTextField();
        txtPhone = new javax.swing.JTextField();
        lblPhoneNo = new javax.swing.JLabel();
        lblEmail = new javax.swing.JLabel();
        helpAccess = new javax.swing.JLabel();
        helpAddress = new javax.swing.JLabel();
        helpCity = new javax.swing.JLabel();
        helpContactDetails = new javax.swing.JLabel();
        helpCapacity = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(51, 51, 51));

        pnlBackground.setBackground(new java.awt.Color(51, 51, 51));

        lblName.setFont(new java.awt.Font("Lucida Grande", 0, 14)); // NOI18N
        lblName.setForeground(new java.awt.Color(255, 255, 255));
        lblName.setText("Name:");

        lblDescription.setFont(new java.awt.Font("Lucida Grande", 0, 14)); // NOI18N
        lblDescription.setForeground(new java.awt.Color(255, 255, 255));
        lblDescription.setText("Description:");

        lblFacilities.setFont(new java.awt.Font("Lucida Grande", 0, 14)); // NOI18N
        lblFacilities.setForeground(new java.awt.Color(255, 255, 255));
        lblFacilities.setText("Facilities:");

        txtName.setBackground(new java.awt.Color(51, 51, 51));
        txtName.setForeground(new java.awt.Color(250, 250, 250));

        jScrollPane1.setBackground(new java.awt.Color(51, 51, 51));
        jScrollPane1.setForeground(new java.awt.Color(250, 250, 250));
        jScrollPane1.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);

        txtDescription.setBackground(new java.awt.Color(51, 51, 51));
        txtDescription.setColumns(1);
        txtDescription.setForeground(new java.awt.Color(250, 250, 250));
        txtDescription.setLineWrap(true);
        txtDescription.setRows(5);
        txtDescription.setWrapStyleWord(true);
        txtDescription.setCaretColor(new java.awt.Color(250, 250, 250));
        txtDescription.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        txtDescription.setSelectedTextColor(new java.awt.Color(250, 250, 250));
        txtDescription.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtDescriptionKeyTyped(evt);
            }
        });
        jScrollPane1.setViewportView(txtDescription);

        lblDescriptionRemaining.setFont(new java.awt.Font("Lucida Grande", 0, 10)); // NOI18N
        lblDescriptionRemaining.setForeground(new java.awt.Color(255, 0, 0));
        lblDescriptionRemaining.setText("500 characters remaining");

        jSeparator.setOrientation(javax.swing.SwingConstants.VERTICAL);
        jSeparator.setToolTipText("");

        javax.swing.GroupLayout pnlImageLayout = new javax.swing.GroupLayout(pnlImage);
        pnlImage.setLayout(pnlImageLayout);
        pnlImageLayout.setHorizontalGroup(
            pnlImageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlImageLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(lblImage, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        pnlImageLayout.setVerticalGroup(
            pnlImageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlImageLayout.createSequentialGroup()
                .addComponent(lblImage, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        txtFacebook.setBackground(new java.awt.Color(51, 51, 51));
        txtFacebook.setForeground(new java.awt.Color(250, 250, 250));
        txtFacebook.setMaximumSize(new java.awt.Dimension(14, 28));

        txtTwitter.setBackground(new java.awt.Color(51, 51, 51));
        txtTwitter.setForeground(new java.awt.Color(250, 250, 250));
        txtTwitter.setMaximumSize(new java.awt.Dimension(14, 28));

        txtInstagram.setBackground(new java.awt.Color(51, 51, 51));
        txtInstagram.setForeground(new java.awt.Color(250, 250, 250));
        txtInstagram.setMaximumSize(new java.awt.Dimension(14, 28));

        txtSoundcloud.setBackground(new java.awt.Color(51, 51, 51));
        txtSoundcloud.setForeground(new java.awt.Color(250, 250, 250));
        txtSoundcloud.setMaximumSize(new java.awt.Dimension(14, 28));

        txtSpotify.setBackground(new java.awt.Color(51, 51, 51));
        txtSpotify.setForeground(new java.awt.Color(250, 250, 250));
        txtSpotify.setMaximumSize(new java.awt.Dimension(14, 28));

        txtWebsite.setBackground(new java.awt.Color(51, 51, 51));
        txtWebsite.setForeground(new java.awt.Color(250, 250, 250));
        txtWebsite.setMaximumSize(new java.awt.Dimension(14, 28));

        lblFacebook.setFont(new java.awt.Font("Lucida Grande", 0, 14)); // NOI18N
        lblFacebook.setForeground(new java.awt.Color(255, 255, 255));
        lblFacebook.setText("Facebook:");

        lblTwitter.setFont(new java.awt.Font("Lucida Grande", 0, 14)); // NOI18N
        lblTwitter.setForeground(new java.awt.Color(255, 255, 255));
        lblTwitter.setText("Twitter:");

        lblInstagram.setFont(new java.awt.Font("Lucida Grande", 0, 14)); // NOI18N
        lblInstagram.setForeground(new java.awt.Color(255, 255, 255));
        lblInstagram.setText("Instagram:");

        lblSoundcloud.setFont(new java.awt.Font("Lucida Grande", 0, 14)); // NOI18N
        lblSoundcloud.setForeground(new java.awt.Color(255, 255, 255));
        lblSoundcloud.setText("Soundcloud:");

        lblSpotify.setFont(new java.awt.Font("Lucida Grande", 0, 14)); // NOI18N
        lblSpotify.setForeground(new java.awt.Color(255, 255, 255));
        lblSpotify.setText("Spotify:");

        lblWebsite.setFont(new java.awt.Font("Lucida Grande", 0, 14)); // NOI18N
        lblWebsite.setForeground(new java.awt.Color(255, 255, 255));
        lblWebsite.setText("Website:");

        lblDetailsTitle.setFont(new java.awt.Font("Lucida Grande", 0, 16)); // NOI18N
        lblDetailsTitle.setForeground(new java.awt.Color(250, 250, 250));
        lblDetailsTitle.setText("Venue Details");

        jScrollPane2.setBackground(new java.awt.Color(51, 51, 51));
        jScrollPane2.setForeground(new java.awt.Color(250, 250, 250));
        jScrollPane2.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        jScrollPane2.setToolTipText("");
        jScrollPane2.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER);

        txtFacilities.setBackground(new java.awt.Color(51, 51, 51));
        txtFacilities.setColumns(1);
        txtFacilities.setForeground(new java.awt.Color(250, 250, 250));
        txtFacilities.setLineWrap(true);
        txtFacilities.setRows(5);
        txtFacilities.setWrapStyleWord(true);
        txtFacilities.setCaretColor(new java.awt.Color(250, 250, 250));
        txtFacilities.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        txtFacilities.setSelectedTextColor(new java.awt.Color(250, 250, 250));
        txtFacilities.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtFacilitiesKeyTyped(evt);
            }
        });
        jScrollPane2.setViewportView(txtFacilities);

        btnCancel.setText("Cancel");
        btnCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelActionPerformed(evt);
            }
        });

        btnSave.setText("Save");
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });

        lblAddImage.setForeground(new java.awt.Color(251, 251, 251));
        lblAddImage.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/icons/addIcon.png"))); // NOI18N
        lblAddImage.setText(" Add Image");
        lblAddImage.setToolTipText("");
        lblAddImage.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblAddImageMouseClicked(evt);
            }
        });

        lblRemoveImage.setForeground(new java.awt.Color(250, 250, 250));
        lblRemoveImage.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        lblRemoveImage.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/icons/removeIcon.png"))); // NOI18N
        lblRemoveImage.setText(" Remove Image");
        lblRemoveImage.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblRemoveImageMouseClicked(evt);
            }
        });

        helpName.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/icons/helpIconNew.png"))); // NOI18N

        helpDescription.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/icons/helpIconNew.png"))); // NOI18N

        helpFacilities.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/icons/helpIconNew.png"))); // NOI18N

        helpImage.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/icons/helpIconNew.png"))); // NOI18N

        helpLinks.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/icons/helpIconNew.png"))); // NOI18N

        lblFacilitiesRemaining.setFont(new java.awt.Font("Lucida Grande", 0, 10)); // NOI18N
        lblFacilitiesRemaining.setForeground(new java.awt.Color(255, 0, 0));
        lblFacilitiesRemaining.setText("200 characters remaining");

        lblCapacitySeating.setFont(new java.awt.Font("Lucida Grande", 0, 14)); // NOI18N
        lblCapacitySeating.setForeground(new java.awt.Color(255, 255, 255));
        lblCapacitySeating.setText("Seating:");

        lblCapacityStanding.setFont(new java.awt.Font("Lucida Grande", 0, 14)); // NOI18N
        lblCapacityStanding.setForeground(new java.awt.Color(255, 255, 255));
        lblCapacityStanding.setText("Standing:");

        txtCapacitySeating.setBackground(new java.awt.Color(51, 51, 51));
        txtCapacitySeating.setForeground(new java.awt.Color(250, 250, 250));

        txtCapacityStanding.setBackground(new java.awt.Color(51, 51, 51));
        txtCapacityStanding.setForeground(new java.awt.Color(250, 250, 250));

        lblCapacity.setFont(new java.awt.Font("Lucida Grande", 1, 14)); // NOI18N
        lblCapacity.setForeground(new java.awt.Color(255, 255, 255));
        lblCapacity.setText("Capacity:");

        lblParking.setFont(new java.awt.Font("Lucida Grande", 0, 14)); // NOI18N
        lblParking.setForeground(new java.awt.Color(255, 255, 255));
        lblParking.setText("Parking:");

        txtParking.setBackground(new java.awt.Color(51, 51, 51));
        txtParking.setForeground(new java.awt.Color(250, 250, 250));

        checkBoxAccess.setForeground(new java.awt.Color(251, 251, 251));
        checkBoxAccess.setText("Disabled Access");

        lblSocialAccount.setFont(new java.awt.Font("Lucida Grande", 0, 16)); // NOI18N
        lblSocialAccount.setForeground(new java.awt.Color(250, 250, 250));
        lblSocialAccount.setText("Social Account");

        lblAddressTitle.setFont(new java.awt.Font("Lucida Grande", 1, 14)); // NOI18N
        lblAddressTitle.setForeground(new java.awt.Color(255, 255, 255));
        lblAddressTitle.setText("Address:");

        lblFacilities1.setFont(new java.awt.Font("Lucida Grande", 0, 14)); // NOI18N
        lblFacilities1.setForeground(new java.awt.Color(255, 255, 255));
        lblFacilities1.setText("Address:");

        jScrollPane3.setBackground(new java.awt.Color(51, 51, 51));
        jScrollPane3.setForeground(new java.awt.Color(250, 250, 250));
        jScrollPane3.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        jScrollPane3.setToolTipText("");
        jScrollPane3.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER);

        txtAddress.setBackground(new java.awt.Color(51, 51, 51));
        txtAddress.setColumns(1);
        txtAddress.setForeground(new java.awt.Color(250, 250, 250));
        txtAddress.setLineWrap(true);
        txtAddress.setRows(5);
        txtAddress.setWrapStyleWord(true);
        txtAddress.setCaretColor(new java.awt.Color(250, 250, 250));
        txtAddress.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        txtAddress.setSelectedTextColor(new java.awt.Color(250, 250, 250));
        txtAddress.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtAddressKeyTyped(evt);
            }
        });
        jScrollPane3.setViewportView(txtAddress);

        lblCity.setFont(new java.awt.Font("Lucida Grande", 0, 14)); // NOI18N
        lblCity.setForeground(new java.awt.Color(255, 255, 255));
        lblCity.setText("City:");

        txtCity.setBackground(new java.awt.Color(51, 51, 51));
        txtCity.setForeground(new java.awt.Color(250, 250, 250));

        lblPostcode.setFont(new java.awt.Font("Lucida Grande", 0, 14)); // NOI18N
        lblPostcode.setForeground(new java.awt.Color(255, 255, 255));
        lblPostcode.setText("Postcode:");

        txtPostcode.setBackground(new java.awt.Color(51, 51, 51));
        txtPostcode.setForeground(new java.awt.Color(250, 250, 250));

        lblContactDetails.setFont(new java.awt.Font("Lucida Grande", 1, 14)); // NOI18N
        lblContactDetails.setForeground(new java.awt.Color(255, 255, 255));
        lblContactDetails.setText("Contact Details:");

        txtEmail.setBackground(new java.awt.Color(51, 51, 51));
        txtEmail.setForeground(new java.awt.Color(250, 250, 250));

        txtPhone.setBackground(new java.awt.Color(51, 51, 51));
        txtPhone.setForeground(new java.awt.Color(250, 250, 250));

        lblPhoneNo.setFont(new java.awt.Font("Lucida Grande", 0, 14)); // NOI18N
        lblPhoneNo.setForeground(new java.awt.Color(255, 255, 255));
        lblPhoneNo.setText("Phone no:");

        lblEmail.setFont(new java.awt.Font("Lucida Grande", 0, 14)); // NOI18N
        lblEmail.setForeground(new java.awt.Color(255, 255, 255));
        lblEmail.setText("Email:");

        helpAccess.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/icons/helpIconNew.png"))); // NOI18N

        helpAddress.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/icons/helpIconNew.png"))); // NOI18N

        helpCity.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/icons/helpIconNew.png"))); // NOI18N

        helpContactDetails.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/icons/helpIconNew.png"))); // NOI18N

        helpCapacity.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/icons/helpIconNew.png"))); // NOI18N

        javax.swing.GroupLayout pnlBackgroundLayout = new javax.swing.GroupLayout(pnlBackground);
        pnlBackground.setLayout(pnlBackgroundLayout);
        pnlBackgroundLayout.setHorizontalGroup(
            pnlBackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlBackgroundLayout.createSequentialGroup()
                .addGroup(pnlBackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlBackgroundLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(pnlBackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(pnlBackgroundLayout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(lblDetailsTitle)
                                .addGap(200, 200, 200))
                            .addGroup(pnlBackgroundLayout.createSequentialGroup()
                                .addGroup(pnlBackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(pnlBackgroundLayout.createSequentialGroup()
                                        .addGroup(pnlBackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(lblDescription)
                                            .addComponent(lblFacilities))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(pnlBackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(pnlBackgroundLayout.createSequentialGroup()
                                                .addGroup(pnlBackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(lblFacilitiesRemaining, javax.swing.GroupLayout.Alignment.TRAILING)
                                                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 296, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addComponent(checkBoxAccess))
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 42, Short.MAX_VALUE)
                                                .addGroup(pnlBackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(helpFacilities, javax.swing.GroupLayout.Alignment.TRAILING)
                                                    .addComponent(helpAccess, javax.swing.GroupLayout.Alignment.TRAILING)
                                                    .addComponent(helpAddress, javax.swing.GroupLayout.Alignment.TRAILING)
                                                    .addComponent(helpCity, javax.swing.GroupLayout.Alignment.TRAILING)
                                                    .addComponent(helpContactDetails, javax.swing.GroupLayout.Alignment.TRAILING)))
                                            .addGroup(pnlBackgroundLayout.createSequentialGroup()
                                                .addGroup(pnlBackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                    .addComponent(lblDescriptionRemaining)
                                                    .addGroup(pnlBackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                                        .addComponent(txtName)
                                                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 300, Short.MAX_VALUE)))
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addGroup(pnlBackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(helpDescription, javax.swing.GroupLayout.Alignment.TRAILING)
                                                    .addComponent(helpName, javax.swing.GroupLayout.Alignment.TRAILING)))))
                                    .addGroup(pnlBackgroundLayout.createSequentialGroup()
                                        .addComponent(lblName)
                                        .addGap(0, 0, Short.MAX_VALUE)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))))
                    .addGroup(pnlBackgroundLayout.createSequentialGroup()
                        .addGroup(pnlBackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(pnlBackgroundLayout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(pnlBackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(pnlBackgroundLayout.createSequentialGroup()
                                        .addGap(181, 181, 181)
                                        .addComponent(lblAddressTitle))
                                    .addComponent(lblFacilities1)
                                    .addGroup(pnlBackgroundLayout.createSequentialGroup()
                                        .addGroup(pnlBackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(lblPostcode)
                                            .addComponent(lblPhoneNo))
                                        .addGap(18, 18, 18)
                                        .addGroup(pnlBackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(pnlBackgroundLayout.createSequentialGroup()
                                                .addComponent(txtPhone, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(18, 18, 18)
                                                .addComponent(lblEmail)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addComponent(txtEmail, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addComponent(txtPostcode, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addGroup(pnlBackgroundLayout.createSequentialGroup()
                                        .addComponent(lblCity)
                                        .addGroup(pnlBackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(pnlBackgroundLayout.createSequentialGroup()
                                                .addGap(58, 58, 58)
                                                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 296, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlBackgroundLayout.createSequentialGroup()
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(txtCity, javax.swing.GroupLayout.PREFERRED_SIZE, 297, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                            .addGroup(pnlBackgroundLayout.createSequentialGroup()
                                .addGap(160, 160, 160)
                                .addComponent(lblContactDetails)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addComponent(jSeparator, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(pnlBackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlBackgroundLayout.createSequentialGroup()
                        .addGap(28, 28, 28)
                        .addGroup(pnlBackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlBackgroundLayout.createSequentialGroup()
                                .addComponent(lblWebsite)
                                .addGap(40, 40, 40))
                            .addGroup(pnlBackgroundLayout.createSequentialGroup()
                                .addGroup(pnlBackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblSoundcloud)
                                    .addComponent(lblInstagram)
                                    .addComponent(lblTwitter)
                                    .addComponent(lblFacebook)
                                    .addComponent(lblSpotify))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                        .addGroup(pnlBackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtFacebook, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 300, Short.MAX_VALUE)
                            .addComponent(txtTwitter, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(txtSoundcloud, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(txtInstagram, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(txtSpotify, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(txtWebsite, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(helpLinks))
                    .addGroup(pnlBackgroundLayout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(pnlBackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(pnlBackgroundLayout.createSequentialGroup()
                                .addComponent(lblCapacitySeating)
                                .addGap(30, 30, 30)
                                .addComponent(txtCapacitySeating, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(pnlBackgroundLayout.createSequentialGroup()
                                .addComponent(lblCapacityStanding)
                                .addGap(18, 18, 18)
                                .addComponent(txtCapacityStanding, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(28, 28, 28)
                        .addComponent(lblParking)
                        .addGap(27, 27, 27)
                        .addComponent(txtParking, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 43, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlBackgroundLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(pnlBackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlBackgroundLayout.createSequentialGroup()
                                .addComponent(pnlImage, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(pnlBackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(pnlBackgroundLayout.createSequentialGroup()
                                        .addGroup(pnlBackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                            .addComponent(jSeparator1, javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(lblAddImage, javax.swing.GroupLayout.Alignment.LEADING))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(helpImage))
                                    .addGroup(pnlBackgroundLayout.createSequentialGroup()
                                        .addComponent(lblRemoveImage)
                                        .addGap(89, 89, 89))))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlBackgroundLayout.createSequentialGroup()
                                .addComponent(lblCapacity)
                                .addGap(156, 156, 156)
                                .addComponent(helpCapacity))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlBackgroundLayout.createSequentialGroup()
                                .addComponent(lblSocialAccount)
                                .addGap(147, 147, 147))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlBackgroundLayout.createSequentialGroup()
                                .addComponent(btnCancel, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnSave, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addGap(28, 28, 28))
        );
        pnlBackgroundLayout.setVerticalGroup(
            pnlBackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlBackgroundLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlBackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlBackgroundLayout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addGroup(pnlBackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblCapacity)
                            .addComponent(helpCapacity))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(pnlBackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblCapacitySeating)
                            .addComponent(txtCapacitySeating, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblParking)
                            .addComponent(txtParking, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(pnlBackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblCapacityStanding)
                            .addComponent(txtCapacityStanding, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(lblSocialAccount)
                        .addGap(18, 18, 18)
                        .addGroup(pnlBackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(pnlImage, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(pnlBackgroundLayout.createSequentialGroup()
                                .addGap(27, 27, 27)
                                .addGroup(pnlBackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblAddImage)
                                    .addComponent(helpImage))
                                .addGap(18, 18, 18)
                                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(lblRemoveImage)))
                        .addGap(18, 18, 18)
                        .addGroup(pnlBackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(helpLinks)
                            .addGroup(pnlBackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(txtFacebook, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(lblFacebook)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(pnlBackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtTwitter, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblTwitter))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(pnlBackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtInstagram, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblInstagram))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(pnlBackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtSoundcloud, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblSoundcloud))
                        .addGroup(pnlBackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtSpotify, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblSpotify))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(pnlBackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtWebsite, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblWebsite))
                        .addGap(41, 41, 41)
                        .addGroup(pnlBackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnCancel)
                            .addComponent(btnSave)))
                    .addGroup(pnlBackgroundLayout.createSequentialGroup()
                        .addGap(9, 9, 9)
                        .addComponent(jSeparator, javax.swing.GroupLayout.PREFERRED_SIZE, 598, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(pnlBackgroundLayout.createSequentialGroup()
                        .addComponent(lblDetailsTitle)
                        .addGap(21, 21, 21)
                        .addGroup(pnlBackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(helpName)
                            .addGroup(pnlBackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(lblName)
                                .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(16, 16, 16)
                        .addGroup(pnlBackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblDescription)
                            .addComponent(helpDescription)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblDescriptionRemaining)
                        .addGap(18, 18, 18)
                        .addGroup(pnlBackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblFacilities)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(helpFacilities))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblFacilitiesRemaining)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(pnlBackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(checkBoxAccess)
                            .addComponent(helpAccess))
                        .addGap(27, 27, 27)
                        .addComponent(lblAddressTitle)
                        .addGap(18, 18, 18)
                        .addGroup(pnlBackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblFacilities1)
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(helpAddress))
                        .addGap(18, 18, 18)
                        .addGroup(pnlBackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblCity)
                            .addComponent(txtCity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(helpCity))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(pnlBackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblPostcode)
                            .addComponent(txtPostcode, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(pnlBackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblContactDetails)
                            .addComponent(helpContactDetails))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(pnlBackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtPhone, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblPhoneNo)
                            .addComponent(lblEmail))
                        .addGap(17, 17, 17)))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnlBackground, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnlBackground, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelActionPerformed
        
        int dialog = JOptionPane.showConfirmDialog(this, "Are you sure you want to cancel?", "Confirm", JOptionPane.OK_CANCEL_OPTION);
        if (dialog == JOptionPane.OK_OPTION) {
            this.dispose();
        }
    }//GEN-LAST:event_btnCancelActionPerformed

    private void txtDescriptionKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtDescriptionKeyTyped
        // Allow user to type if the description length is < 500
        if (500 - txtDescription.getText().length() >= 0) {
            lblDescriptionRemaining.setText((500 - txtDescription.getText().length()) + " characters remaining");
        } else {
            // else remove any additional characters
            txtDescription.setText(txtDescription.getText().substring(0, txtDescription.getText().length() - 1));
        }
    }//GEN-LAST:event_txtDescriptionKeyTyped

    private void lblAddImageMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblAddImageMouseClicked
        // Create filter so only image files are shown in dialog
        FileNameExtensionFilter imgFilter = new FileNameExtensionFilter(
                "Image files", ImageIO.getReaderFileSuffixes());
        
        final JFileChooser fc = new JFileChooser();
        fc.setFileFilter(imgFilter);
        
        int returnedValue = fc.showOpenDialog(this);
        
        if (returnedValue == JFileChooser.APPROVE_OPTION) {
            File file = fc.getSelectedFile();
            
            try {
                // Read the selected image, and create 5 scaled images from this.
                BufferedImage img = ImageIO.read(file);
                images = ImageAssist.duplicate(img);
                lblImage.setIcon(new ImageIcon(images.get(1)));
            }
            catch (IOException ex) {
                JOptionPane.showMessageDialog(this, "There was a problem reading the file you selected,"
                        + " please try again.");
            }
        }
    }//GEN-LAST:event_lblAddImageMouseClicked

    private void lblRemoveImageMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblRemoveImageMouseClicked
        
        int dialog = JOptionPane.showConfirmDialog(this, "Are you sure you want to remove this image?", "Confirm", JOptionPane.OK_CANCEL_OPTION);
        if (dialog == JOptionPane.OK_OPTION) {
            
            for (int i = 0; i < images.size(); i++) {
                images.remove(i);
            }
            
            try {
                images = ImageAssist.createDefaults();
                lblImage.setIcon(new ImageIcon(images.get(1)));
                
            } catch (IOException ex) {
                JOptionPane.showMessageDialog(this, "There was a problem setting a default image,"
                        + " please try again.");
            }
        }
    }//GEN-LAST:event_lblRemoveImageMouseClicked

    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed
        int result = JOptionPane.showConfirmDialog(this, "Are you ready to save? Changes will immediately become live.", 
                "Save Artist", JOptionPane.OK_CANCEL_OPTION);
        
        if (result == JOptionPane.OK_OPTION) {
            
            venue = new Venue();
            try {
                if (venue.setName(txtName.getText())) 
                {
                    if (venue.setDescription(txtDescription.getText())) 
                    {
                        if (venue.setFacilites(txtFacilities.getText())) 
                        {
                            if (venue.setAddress(txtAddress.getText())) 
                            {
                                if (venue.setCity(txtCity.getText())) 
                                {
                                    if (venue.setPostcode(txtPostcode.getText()))
                                    {
                                        // No regular expression here...
                                        if (venue.setPhoneNumber(txtPhone.getText()))
                                        {
                                            if (venue.setEmail(txtEmail.getText()))
                                            {
                                                try {
                                                    int capStanding = Integer.parseInt(txtCapacityStanding.getText());
                                                    
                                                    if (venue.setStandingCapacity(capStanding)) {
                                                        
                                                        try {
                                                            int capSeating = Integer.parseInt(txtCapacitySeating.getText());
                                                            
                                                            if (venue.setSeatingCapacity(capSeating)) {
                                                                
                                                                if (txtParking.getText().equals("")) {
                                                                    venue.setParking(0);
                                                                } else {
                                                                    try {
                                                                        int capParking = Integer.parseInt(txtParking.getText());
                                                                        
                                                                        if (venue.setParking(capParking)) {
                                                                            
                                                                            venue.setDisabledAccess(checkBoxAccess.isSelected());
                                                
                                                                            SocialMedia social = new SocialMedia();

                                                                            if (!txtFacebook.getText().equals("https://")) 
                                                                            {
                                                                                if (!social.setFacebook(txtFacebook.getText()))
                                                                                {
                                                                                    JOptionPane.showMessageDialog(this, "Invalid facebook URL. "
                                                                                            + "Connection couldn't be made to the website.");
                                                                                }
                                                                            }
                                                                            if (!txtTwitter.getText().equals("https://")) 
                                                                            {
                                                                                if (!social.setTwitter(txtTwitter.getText()))
                                                                                {
                                                                                    JOptionPane.showMessageDialog(this, "Invalid twitter URL. "
                                                                                            + "Connection couldn't be made to the website.");
                                                                                }
                                                                            }
                                                                            if (!txtInstagram.getText().equals("https://")) 
                                                                            {
                                                                                if (!social.setFacebook(txtInstagram.getText()))
                                                                                {
                                                                                    JOptionPane.showMessageDialog(this, "Invalid instagram URL. "
                                                                                            + "Connection couldn't be made to the website.");
                                                                                }
                                                                            }
                                                                            if (!txtSoundcloud.getText().equals("https://")) 
                                                                            {
                                                                                if (!social.setFacebook(txtSoundcloud.getText()))
                                                                                {
                                                                                    JOptionPane.showMessageDialog(this, "Invalid soundcloud URL. "
                                                                                            + "Connection couldn't be made to the website.");
                                                                                }
                                                                            }
                                                                            if (!txtSpotify.getText().equals("https://")) 
                                                                            {
                                                                                if (!social.setFacebook(txtSpotify.getText()))
                                                                                {
                                                                                    JOptionPane.showMessageDialog(this, "Invalid spotify URL. "
                                                                                            + "Connection couldn't be made to the website.");
                                                                                }
                                                                            }
                                                                            if (!txtWebsite.getText().equals("https://")) 
                                                                            {
                                                                                if (!social.setFacebook(txtWebsite.getText()))
                                                                                {
                                                                                    JOptionPane.showMessageDialog(this, "Invalid website URL. "
                                                                                            + "Connection couldn't be made to the website.");
                                                                                }
                                                                            }
                                                                            social.setImages(images);
                                                                            //social = (SocialMedia) DesktopWrapper.getInstance().createNewObject(social, DatabaseTable.SOCIAL_MEDIA);
                                                                            venue.setSocialMedia(social);
                                                                            venue = (Venue) DesktopWrapper.getInstance().createNewObject(venue, DatabaseTable.VENUE);

                                                                            parent.populateTable();
                                                                            dispose();
                                                                        }
                                                                    }
                                                                    catch (NumberFormatException ex) {
                                                                        JOptionPane.showMessageDialog(this, "Parking capacity must be an integer value.");
                                                                    }
                                                                }
                                                            }
                                                            
                                                        }
                                                        catch (NumberFormatException ex) {
                                                            JOptionPane.showMessageDialog(this, "Seating capacity must be an integer value.");
                                                        }
                                                    }
                                                }
                                                catch (NumberFormatException ex) {
                                                    JOptionPane.showMessageDialog(this, "Standing capacity must be an integer value.");
                                                }
                                            }
                                            else {
                                                JOptionPane.showMessageDialog(this, "Invalid email address. "
                                                        + "Please check the format.");
                                            }
                                        }
                                        else {
                                            JOptionPane.showMessageDialog(this, "Invalid phone number.");
                                        }
                                    }
                                    else {
                                        JOptionPane.showMessageDialog(this, "Invalid postcode. Must have a valid UK postcode.");
                                    }
                                }
                                else {
                                    JOptionPane.showMessageDialog(this, "Invalid city.");
                                }
                            }
                            else {
                                JOptionPane.showMessageDialog(this, "Invalid address. Must be between 5 & 200 characters "
                                        + "and not contain any blacklisted words.");
                            }
                        }
                        else {
                            JOptionPane.showMessageDialog(this, "Invalid facilities description. Must be under 100 characters, "
                                    + "and not contain any blacklisted words.");
                        }
                    }
                    else 
                    {
                        JOptionPane.showMessageDialog(this, "Invalid description. Must be between 10 & 100 characters long, " +
                            "and not contain blacklisted words");
                    }
                }
                else 
                {
                    JOptionPane.showMessageDialog(this, "Invalid name. Must not contain any blacklisted words, "
                            + "and must be between 2 & 20 characters long");
                }
            } catch (IOException ex) {
                System.out.println("Josh you're a bellend");
                ex.printStackTrace();
            }
        }
    }//GEN-LAST:event_btnSaveActionPerformed

    private void txtFacilitiesKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtFacilitiesKeyTyped
        // Allow user to type if the description length is < 200
        if (200 - txtDescription.getText().length() >= 0) {
            lblDescriptionRemaining.setText((200 - txtDescription.getText().length()) + " characters remaining");
        } else {
            // else remove any additional characters
            txtDescription.setText(txtDescription.getText().substring(0, txtDescription.getText().length() - 1));
        }
    }//GEN-LAST:event_txtFacilitiesKeyTyped

    private void txtAddressKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtAddressKeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_txtAddressKeyTyped

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new PnlNewVenue().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCancel;
    private javax.swing.JButton btnSave;
    private javax.swing.JCheckBox checkBoxAccess;
    private javax.swing.JLabel helpAccess;
    private javax.swing.JLabel helpAddress;
    private javax.swing.JLabel helpCapacity;
    private javax.swing.JLabel helpCity;
    private javax.swing.JLabel helpContactDetails;
    private javax.swing.JLabel helpDescription;
    private javax.swing.JLabel helpFacilities;
    private javax.swing.JLabel helpImage;
    private javax.swing.JLabel helpLinks;
    private javax.swing.JLabel helpName;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JSeparator jSeparator;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JLabel lblAddImage;
    private javax.swing.JLabel lblAddressTitle;
    private javax.swing.JLabel lblCapacity;
    private javax.swing.JLabel lblCapacitySeating;
    private javax.swing.JLabel lblCapacityStanding;
    private javax.swing.JLabel lblCity;
    private javax.swing.JLabel lblContactDetails;
    private javax.swing.JLabel lblDescription;
    private javax.swing.JLabel lblDescriptionRemaining;
    private javax.swing.JLabel lblDetailsTitle;
    private javax.swing.JLabel lblEmail;
    private javax.swing.JLabel lblFacebook;
    private javax.swing.JLabel lblFacilities;
    private javax.swing.JLabel lblFacilities1;
    private javax.swing.JLabel lblFacilitiesRemaining;
    private javax.swing.JLabel lblImage;
    private javax.swing.JLabel lblInstagram;
    private javax.swing.JLabel lblName;
    private javax.swing.JLabel lblParking;
    private javax.swing.JLabel lblPhoneNo;
    private javax.swing.JLabel lblPostcode;
    private javax.swing.JLabel lblRemoveImage;
    private javax.swing.JLabel lblSocialAccount;
    private javax.swing.JLabel lblSoundcloud;
    private javax.swing.JLabel lblSpotify;
    private javax.swing.JLabel lblTwitter;
    private javax.swing.JLabel lblWebsite;
    private javax.swing.JPanel pnlBackground;
    private javax.swing.JPanel pnlImage;
    private javax.swing.JTextArea txtAddress;
    private javax.swing.JTextField txtCapacitySeating;
    private javax.swing.JTextField txtCapacityStanding;
    private javax.swing.JTextField txtCity;
    private javax.swing.JTextArea txtDescription;
    private javax.swing.JTextField txtEmail;
    private javax.swing.JTextField txtFacebook;
    private javax.swing.JTextArea txtFacilities;
    private javax.swing.JTextField txtInstagram;
    private javax.swing.JTextField txtName;
    private javax.swing.JTextField txtParking;
    private javax.swing.JTextField txtPhone;
    private javax.swing.JTextField txtPostcode;
    private javax.swing.JTextField txtSoundcloud;
    private javax.swing.JTextField txtSpotify;
    private javax.swing.JTextField txtTwitter;
    private javax.swing.JTextField txtWebsite;
    // End of variables declaration//GEN-END:variables
}
